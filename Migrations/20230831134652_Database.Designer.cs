// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnoAcademyApi.Data;

#nullable disable

namespace TechnoAcademyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230831134652_Database")]
    partial class Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TechnoAcademyApi.Models.AppliedProgram", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("IdProgramEntity")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "id_program_entity");

                    b.Property<string>("IdRegister")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "id_register");

                    b.Property<string>("Last_Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("IdRegister");

                    b.ToTable("AppliedPrograms");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Comment", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Parent_Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.FormRegister", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "cv");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Domicile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<float>("IPK")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ipk");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<bool>("StudentStatus")
                        .HasColumnType("tinyint(1)")
                        .HasAnnotation("Relational:JsonPropertyName", "student_status");

                    b.Property<string>("StudyProgram")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "study_program");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("FormRegisters");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.ProgramCategory", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEnd")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateStart")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Flag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("ProgramCategories");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.ProgramEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IdCategory")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusProgram")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("IdCategory");

                    b.ToTable("ProgramEntities");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.StatusLog", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("DateHistory")
                        .HasColumnType("longtext");

                    b.Property<string>("IdAppliedProgram")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "id_applied_program");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("Sequence")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<int>("StepStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("IdAppliedProgram");

                    b.ToTable("StatusLogs");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.AppliedProgram", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.FormRegister", "FormRegister")
                        .WithMany()
                        .HasForeignKey("IdRegister")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormRegister");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.ProgramEntity", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.ProgramCategory", "ProgramCategory")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramCategory");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.StatusLog", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.AppliedProgram", "AppliedProgram")
                        .WithMany()
                        .HasForeignKey("IdAppliedProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppliedProgram");
                });
#pragma warning restore 612, 618
        }
    }
}
