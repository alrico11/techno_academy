// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnoAcademyApi.Data;

#nullable disable

namespace TechnoAcademyApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.AppliedProgram", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IdProgramEntity")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "id_program_entity");

                    b.Property<string>("IdRegister")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "id_register");

                    b.Property<string>("Last_Status")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("IdProgramEntity");

                    b.HasIndex("IdRegister");

                    b.ToTable("Trn_applied_program");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.BannerEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_banner");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.Comment", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Parent_Comment")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_comment_section");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.EventEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("PublishedStatus")
                        .HasColumnType("tinyint(1)")
                        .HasAnnotation("Relational:JsonPropertyName", "published_status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_event");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.FormRegister", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CV")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Domicile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("IPK")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pict")
                        .HasColumnType("longtext");

                    b.Property<int>("Semester")
                        .HasColumnType("int");

                    b.Property<bool>("StudentStatus")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("StudyProgram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Mst_user");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.GCMEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CharDesc1")
                        .HasColumnType("longtext");

                    b.Property<string>("CharDesc2")
                        .HasColumnType("longtext");

                    b.Property<string>("CharDesc3")
                        .HasColumnType("longtext");

                    b.Property<string>("CharDesc4")
                        .HasColumnType("longtext");

                    b.Property<string>("CharDesc5")
                        .HasColumnType("longtext");

                    b.Property<string>("CharValue1")
                        .HasColumnType("longtext");

                    b.Property<string>("CharValue2")
                        .HasColumnType("longtext");

                    b.Property<string>("CharValue3")
                        .HasColumnType("longtext");

                    b.Property<string>("CharValue4")
                        .HasColumnType("longtext");

                    b.Property<string>("CharValue5")
                        .HasColumnType("longtext");

                    b.Property<string>("Condition")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Pict")
                        .HasColumnType("longtext");

                    b.Property<bool?>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_GCM_Academy");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.GalleryEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_gallery");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.MentorEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Framework")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_mentor");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.ProgramCategory", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateEnd")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateStart")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_program");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.ProgramEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IdCategory")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pict")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("StatusProgram")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("IdCategory");

                    b.ToTable("Mst_applied_program");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.RoleEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_role");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.StatusLog", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("IdAppliedProgram")
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Relational:JsonPropertyName", "id_applied_program");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("StepStatus")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("IdAppliedProgram");

                    b.ToTable("Log_status");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.TestimonyEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.ToTable("Mst_testimony");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.TokenEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredToken")
                        .HasColumnType("datetime(6)")
                        .HasAnnotation("Relational:JsonPropertyName", "expired_token");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("UUID");

                    b.ToTable("Mst_token");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.UserEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("Flag_Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("Role");

                    b.ToTable("Mst_user_cms");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.AppliedProgram", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.Entity.ProgramEntity", "ProgramEntity")
                        .WithMany()
                        .HasForeignKey("IdProgramEntity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnoAcademyApi.Models.Entity.FormRegister", "FormRegister")
                        .WithMany()
                        .HasForeignKey("IdRegister")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormRegister");

                    b.Navigation("ProgramEntity");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.ProgramEntity", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.Entity.ProgramCategory", "ProgramCategory")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramCategory");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.StatusLog", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.Entity.AppliedProgram", "AppliedProgram")
                        .WithMany()
                        .HasForeignKey("IdAppliedProgram");

                    b.Navigation("AppliedProgram");
                });

            modelBuilder.Entity("TechnoAcademyApi.Models.Entity.UserEntity", b =>
                {
                    b.HasOne("TechnoAcademyApi.Models.Entity.RoleEntity", "RoleEntity")
                        .WithMany()
                        .HasForeignKey("Role");

                    b.Navigation("RoleEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
